---
language: bash

# Tell Travis to start Docker when it brings up an environment.
services:
  - docker

env:
  # Provide a list of OSes we want to use for testing.
  - DISTRIBUTION: debian8
  - DISTRIBUTION: debian9
  - DISTRIBUTION: centos7

script:
  # Configure test script so we can run extra tests after playbook is run.
  - export CLEANUP=false

  # Download test shim.
  - wget -O ${PWD}/tests/test.sh https://gist.githubusercontent.com/Turgon37/5b6e6553ef92dc65d1c7df3e1a1e290e/raw/
  - chmod +x ${PWD}/tests/test.sh

  # Run tests.
  - ${PWD}/tests/test.sh
  - export container_id=$(cat /tmp/container_id)

  #
  ## Specific roles tests
  #
  # Ensure Bind is installed.
  - docker exec --tty ${container_id} env TERM=xterm which named
  - docker exec --tty ${container_id} env TERM=xterm /usr/bin/env named -v


  ## Tests Zone RR entries
  # Ensure the configured RR entry is set
  - docker exec --tty ${container_id} env TERM=xterm dig +noall +answer NS test.local @localhost | grep localhost
  - docker exec --tty ${container_id} env TERM=xterm dig +noall +answer A server1.test.local @localhost | grep 192.168.1.1


  ## Tests SOA features
  # TEST-SOA.1 Ensure the automaticcly generated SOA serial is valid
  - docker exec --tty ${container_id} env TERM=xterm dig +noall +answer SOA test.local | awk '{ print $7 }' | grep "$(date '+%Y%m%d00')"

  # TEST-SOA.2 Ensure that manual set SOA is correctly respected
  - docker exec --tty ${container_id} env TERM=xterm dig +noall +answer SOA manual-soa-test.local | awk '{ print $7 }' | grep --extended-regexp "^20101010$"

  # TEST-SOA.3 Ensure that email address is correctly encoded
  - docker exec --tty ${container_id} env TERM=xterm dig +noall +answer SOA manual-soa-test.local | awk '{ print $6 }' |  grep --extended-regexp "^admin\.example\.com.$"

  # TEST-SOA.4 Ensure that SOA serial is correctly updated on zone change (test SOA.4)
  - "sed -i 's/# TEST-SOA.4/      - { name: '\''server2'\'',  type: '\''A'\'', data: '\''192.168.1.1'\'' }/' tests/group_vars/all.yml"
  - docker exec $CONTAINER_ID env TERM=xterm env ANSIBLE_FORCE_COLOR=1 ansible-playbook /etc/ansible/roles/role_under_test/tests/$PLAYBOOK $ansible_options
  - docker exec --tty ${container_id} env TERM=xterm dig +noall +answer SOA test.local | awk '{ print $7 }' | grep "$(date '+%Y%m%d01')"
